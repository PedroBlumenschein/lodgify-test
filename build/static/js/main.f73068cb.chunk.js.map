{"version":3,"sources":["logo.svg","components/CardStatus/CardStatus.js","assets/cardFigurePlaceholder/noImagePlaceholder.svg","components/CardFigure/CardFigure.js","components/CardDescription/CardDescription.js","assets/icons/iconcheck.svg","components/CardAction/CardAction.js","components/RentalCard/RentalCard.js","pages/RentalsListPage/RentalsListPage.js","App.js","reportWebVitals.js","index.js"],"names":["CardStatus","props","booked","bookable","useState","status","setStatus","backgroundColor","setBackgroundColor","useEffect","className","style","CardFigure","image","figurePlaceholder","rentalImage","setRentalImage","src","alt","CardDescription","id","name","rentalId","setRentalId","rentalName","setRentalName","CardAction","actionName","setActionName","actionBackgroundColor","setActionBackgroundColor","checkIcon","RentalCard","RentalsListPage","rentalsList","setRentalsList","axios","get","then","found","data","catch","err","console","log","map","rental","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f73068cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react'\nimport './CardStatus.css'\n\nexport  const CardStatus = (props) => {\n\n    const {booked, bookable} = props\n\n    const [status, setStatus] = useState('')\n    const [backgroundColor, setBackgroundColor] = useState('')\n\n    const initialStateBuilder = () => {\n        if (booked > 0) {\n            setStatus('booked')\n            setBackgroundColor('#2C64B7')\n        } \n        else if (bookable === false) {\n            setStatus('unavailable')\n            setBackgroundColor('#E02323')\n        }\n        else {\n            setStatus('available')\n            setBackgroundColor('#11A960')\n        }\n    }\n\n    useEffect(() => {\n        initialStateBuilder()\n      }, []);\n\n    return (\n        <div className=\"cardStatusMainContainer\" style={{backgroundColor: backgroundColor}}>\n            <p>{status}</p>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/noImagePlaceholder.9579ce93.svg\";","import React, {useState, useEffect} from 'react'\nimport './CardFigure.css'\n\n//this should be an svg, not a png.\nimport figurePlaceholder from '../../assets/cardFigurePlaceholder/noImagePlaceholder.svg'\n\nexport const CardFigure = (props) => {\n\n    const {image} = props\n\n    const [rentalImage, setRentalImage] = useState(figurePlaceholder)\n\n    const initialStateBuilder = () => {\n        //this needs to be updated. The IF logic contemplating the placeholder must be added. \n        setRentalImage(image)\n    }\n\n    useEffect(() => {\n        initialStateBuilder()\n    }, []);\n\n    return (\n        <img className=\"cardFigureImg\" src={rentalImage} alt=\"\" />\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport './CardDescription.css'\n\nexport const CardDescription = (props) => {\n\n    const {id, name} = props\n\n    const [rentalId, setRentalId] = useState('')\n    const [rentalName, setRentalName] = useState('')\n\n    const initialStateBuilder = () => {\n        setRentalId(id);\n        setRentalName(name)\n    }\n\n    useEffect(() => {\n        initialStateBuilder()\n    }, []);\n\n    return (\n        <div>\n            <p className=\"rentalId\">Id: {rentalId}</p>\n            <p className=\"rentalName\">{rentalName}</p>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/iconcheck.f118b4ad.svg\";","import React, {useState, useEffect} from 'react'\nimport './CardAction.css'\nimport checkIcon from '../../assets/icons/iconcheck.svg'\n\nexport const CardAction = (props) => {\n\n    const {booked, bookable} = props\n\n    const [actionName, setActionName] = useState('')\n    const [actionBackgroundColor, setActionBackgroundColor] = useState('')\n\n    const initialStateBuilder = () => {\n        if (booked > 0) {\n            setActionName('booked')\n        } \n        else if (bookable === false) {\n            setActionName('Not bookable');\n            setActionBackgroundColor('#B2B2B2')\n        }\n        else {\n            setActionName('Book');\n            setActionBackgroundColor('#2C64B7')\n        }\n    }\n\n    useEffect(() => {\n        initialStateBuilder()\n    }, []);\n    \n    if (actionName === 'booked') {\n        return (\n            <p className=\"cardActionBooked\"><img src={checkIcon} alt=\"\"/> Booked for {booked} days</p>\n        )\n    }\n    else {\n        return (\n            <button className=\"cardActionButton\" style={{backgroundColor: actionBackgroundColor}}>{actionName}</button>\n        )\n    }\n    \n}\n","import React, {useState, useEffect} from 'react'\nimport {CardStatus} from '../CardStatus/CardStatus'\nimport {CardFigure} from '../CardFigure/CardFigure'\nimport {CardDescription} from '../CardDescription/CardDescription'\nimport {CardAction} from '../CardAction/CardAction'\n\nimport './RentalCard.css'\n\nexport const RentalCard = (props) => {\n\n    const {id, name, image, booked, bookable} = props\n\n\n    return (\n        <div className=\"rentalCardContainer\">\n            <div className=\"cardStatusContainer\">\n                <CardStatus booked={booked} bookable={bookable}/>\n            </div>\n            <figure className=\"cardImageContainer\">\n                <CardFigure image={image}/>\n            </figure>\n            <div className=\"cardDescriptionAndActionContainer\">\n                <div className=\"cardDescriptionContainer\">\n                    <CardDescription id={id} name={name}/>\n                </div>\n                <CardAction booked={booked} bookable={bookable}/>\n            </div>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport './RentalsListPage.css'\nimport {RentalCard} from '../../components/RentalCard/RentalCard'\nimport axios from 'axios'\n\nexport const RentalsListPage = () => {\n\n    const [rentalsList, setRentalsList] = useState([])\n\n    const rentalsListEndpoint = 'https://gist.githubusercontent.com/huvber/b51c0279d3f452513a7c1f576a54f4d7/raw/4497a12b181713c6856303a666d240f7d561e4fe/mock-house'\n\n    const listStateBuilder = () => {\n        axios.get(\n            rentalsListEndpoint\n        )\n        .then(found => {\n            setRentalsList(found.data)\n        })\n        .catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n        listStateBuilder()\n      }, []);\n\n    return (\n        <div className=\"rentalsListPageContainer\">\n            {rentalsList.map( (rental) => {\n                return <RentalCard key={rental.id} {...rental}/>\n            })}\n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\n\nimport {RentalsListPage} from './pages/RentalsListPage/RentalsListPage'\n\nfunction App() {\n  return (\n    <div className=\"appContainer\">\n      <RentalsListPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}